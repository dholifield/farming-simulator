import pygame
from time import sleep, time
from pygame.locals import *
from random import randrange
from pygame import mixer
import numpy as np

WIDTH = 1800
HEIGHT = 900
GREEN = (147, 216, 175)

TILE_WIDTH = 72
TILE_HEIGHT = 36

#create a 25 x 25 array of random zeros and ones
#array = np.random.randint(40, size=(12, 12))
crop_array = np.random.randint(3, size=(25, 25))
array = np.random.randint(40, size=(25, 25))

#code to import music
#mixer.init()
#mixer.music.load("Farming Song.mp3") #need to import music into file
#mixer.music.play(-1) #infinitely loops music
#mixer.music.set_volume(0.2) #sets volume to 20%

#might need to figure out a way to stop music when game is closed (should be fine)

#ambient music code, if multiple ambient music
#a


def getTileLocation(tile_x, tile_y):
    x = WIDTH / 2 + (tile_x * TILE_WIDTH / 2 - tile_y * TILE_WIDTH / 2)
    y = (tile_y * TILE_HEIGHT / 2 + tile_x * TILE_HEIGHT / 2)
    return (x, y)

def drawTile(screen, tile_x, tile_y, color):
    x, y = getTileLocation(tile_x, tile_y)
    pygame.draw.polygon(screen, color, ((x, y), (x+TILE_HEIGHT-1, y+TILE_HEIGHT/2-1), (x, y+TILE_HEIGHT-2), (x-TILE_HEIGHT-1, y+TILE_HEIGHT/2-1)))

def drawImageTile(screen, tile_x, tile_y, image):
    image = pygame.transform.scale(image, (TILE_WIDTH, TILE_WIDTH))
    x, y = getTileLocation(tile_x, tile_y)
    x  = x - image.get_width() / 2
    y = y - image.get_height() / 2
    screen.blit(image, (x, y))

def drawBigImageTile(screen, tile_x, tile_y, image):
    image = pygame.transform.scale(image, (TILE_WIDTH*2, TILE_WIDTH*2))
    x, y = getTileLocation(tile_x, tile_y)
    x  = x - image.get_width() / 2
    y = y - image.get_height() / 2
    screen.blit(image, (x, y))

def main():
    pygame.init()
    pygame.display.set_caption("Farming Simulator")
    screen = pygame.display.set_mode((WIDTH, HEIGHT))
    screen.fill(GREEN)

    running = True

    for i in range(0, 13):
        for j in range(-7, 0):
            drawBigImageTile(screen, 2*j, 2*i, pygame.image.load("images/tree.png"))
            drawBigImageTile(screen, 2*i, 2*j, pygame.image.load("images/tree.png"))

    for i in range(0, 25):
        for j in range(25, 40):
            drawImageTile(screen, i, j, pygame.image.load("images/grass.png"))
            drawImageTile(screen, j, i, pygame.image.load("images/water.png"))

    for i in range (0, 25):
        drawImageTile(screen, 25, i, pygame.image.load("images/grass.png"))
        drawImageTile(screen, 26, i, pygame.image.load("images/grass.png"))
        drawImageTile(screen, 27, i, pygame.image.load("images/dirt.png"))




    #fill the screen with tiles
    # for i in range(0, 25):
    #     for j in range(0, 25):
    #         drawTile(screen, i, j, (randrange(110, 120), randrange(210, 220), randrange(140, 150)))
    #         if array[i][j] == 1:
    #             drawImageTile(screen, i, j, pygame.image.load("images/rocks.png"))
    #         elif array[i][j] == 2:
    #             drawImageTile(screen, i, j, pygame.image.load("images/tree2.png"))
    #         elif array[i][j] > 2 and array[i][j] < 20:
    #             drawImageTile(screen, i, j, pygame.image.load("images/corn.png"))
    #         else:
    #             drawImageTile(screen, i, j, pygame.image.load("images/grass.png"))



    # for i in range (1,24):
    #     for j in range (1,24):
    #         if crop_array[i][j] == 1:
    #             drawImageTile(screen, i, j, pygame.image.load("images/corn.png"))

    # tractor = pygame.image.load("images/tractor.png")
    # tractor = pygame.transform.scale(tractor, (120, 80))
    # tractor = pygame.transform.flip(tractor, True, False)
    # screen.blit(tractor, (400, 800))

    barn = pygame.image.load("images/barn.png")
    barn = pygame.transform.scale(barn, (400, 350))
    screen.blit(barn, (5, 550))

    # for i in range (0, 12):
    #     for j in range (0, 12):
    #         if array[i][j] == 1:
    #             drawBigImageTile(screen, i*2, j*2, pygame.image.load("tree.png"))
    #         if array[i][j] == 2:
    #             drawBigImageTile(screen, i*2, j*2, pygame.image.load("tree2.png"))

    #random generation of obstacles
    #for i in range (x,y) where x and y are number of nonfarmable tiles wanted/desired (could make it random generated by seed?)
        #drawImageTile(screen, RANDOM I HERE, RANDOM J HERE, pygame.image.load(OBSTACLE TILE IMAGE HERE (could be tree, rock, etc)))

    # draw the corn tile
    #drawImageTile(screen, 5, 5, pygame.image.load("corn_tile.png"))


    display_surface = pygame.display.get_surface()
    #display_surface.blit(pygame.transform.flip(display_surface, False, True), dest=(0, 0))
    pygame.display.flip()

    while running:
        sleep(0.1)


if __name__ == "__main__":
    main()
    